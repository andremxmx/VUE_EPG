{"version":3,"file":"planby.cjs.production.min.js","sources":["../src/Epg/styles/global.styles.ts","../src/Epg/styles/Epg.styles.ts","../src/Epg/styles/Channels.styles.ts","../src/Epg/styles/Channel.styles.ts","../src/Epg/styles/Program.styles.ts","../src/Epg/helpers/common.ts","../src/Epg/helpers/time.ts","../src/Epg/helpers/variables.ts","../src/Epg/helpers/epg.ts","../src/Epg/styles/Timeline.styles.ts","../src/Epg/styles/Line.styles.ts","../src/Epg/styles/Loader.styles.ts","../src/Epg/components/Layout.tsx","../src/Epg/theme/theme.ts","../src/Epg/hooks/useEpg.tsx","../src/Epg/hooks/useInterval.tsx","../src/Epg/hooks/useProgram.tsx","../src/Epg/hooks/useTimeline.tsx","../src/Epg/components/Program.tsx","../src/Epg/components/Channels.tsx","../src/Epg/components/Channel.tsx","../src/Epg/components/Timeline.tsx","../src/Epg/components/Line/Line.tsx","../src/Epg/components/Line/useLine.tsx","../src/Epg/components/Loader.tsx","../src/Epg/Epg.tsx","../src/Epg/index.ts","../src/Epg/hooks/useLayout.tsx"],"sourcesContent":["import { css } from \"@emotion/react\";\n\nexport const globalStyles = css`\n  @import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Work+Sans:ital,wght@0,200;0,400;0,500;0,600;1,300&display=swap\");\n\n  /*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n  /*\nDocument\n========\n*/\n\n  /**\nUse a better box model (opinionated).\n*/\n\n  *,\n  ::before,\n  ::after {\n    box-sizing: border-box;\n  }\n\n  /**\n1. Correct the line height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n3. Use a more readable tab size (opinionated).\n*/\n\n  html {\n    line-height: 1.15; /* 1 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n    -moz-tab-size: 4; /* 3 */\n    tab-size: 4; /* 3 */\n  }\n\n  /*\nSections\n========\n*/\n\n  /**\n1. Remove the margin in all browsers.\n2. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n*/\n\n  body {\n    margin: 0; /* 1 */\n    font-family: \"Inter\", system-ui, -apple-system,\n      /* Firefox supports this but not yet system-ui */ \"Segoe UI\", Roboto,\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\"; /* 2 */\n  }\n\n  /*\nGrouping content\n================\n*/\n\n  /**\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n*/\n\n  hr {\n    height: 0; /* 1 */\n    color: inherit; /* 2 */\n  }\n\n  /*\nText-level semantics\n====================\n*/\n\n  /**\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\n  abbr[title] {\n    text-decoration: underline dotted;\n  }\n\n  /**\nAdd the correct font weight in Edge and Safari.\n*/\n\n  b,\n  strong {\n    font-weight: bolder;\n  }\n\n  /**\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n2. Correct the odd 'em' font sizing in all browsers.\n*/\n\n  code,\n  kbd,\n  samp,\n  pre {\n    font-family: ui-monospace, SFMono-Regular, Consolas, \"Liberation Mono\",\n      Menlo, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n\n  /**\nAdd the correct font size in all browsers.\n*/\n\n  small {\n    font-size: 80%;\n  }\n\n  /**\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n*/\n\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n\n  sub {\n    bottom: -0.25em;\n  }\n\n  sup {\n    top: -0.5em;\n  }\n\n  /*\nTabular data\n============\n*/\n\n  /**\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n*/\n\n  table {\n    text-indent: 0; /* 1 */\n    border-color: inherit; /* 2 */\n  }\n\n  /*\nForms\n=====\n*/\n\n  /**\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n*/\n\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n  }\n\n  /**\nRemove the inheritance of text transform in Edge and Firefox.\n*/\n\n  button,\n  select {\n    text-transform: none;\n  }\n\n  /**\nCorrect the inability to style clickable types in iOS and Safari.\n*/\n\n  button,\n  [type=\"button\"],\n  [type=\"reset\"],\n  [type=\"submit\"] {\n    -webkit-appearance: button;\n  }\n\n  /**\nRemove the inner border and padding in Firefox.\n*/\n\n  ::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n\n  /**\nRestore the focus styles unset by the previous rule.\n*/\n\n  :-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n\n  /**\nRemove the additional ':invalid' styles in Firefox.\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n*/\n\n  :-moz-ui-invalid {\n    box-shadow: none;\n  }\n\n  /**\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n*/\n\n  legend {\n    padding: 0;\n  }\n\n  /**\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\n  progress {\n    vertical-align: baseline;\n  }\n\n  /**\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n  ::-webkit-inner-spin-button,\n  ::-webkit-outer-spin-button {\n    height: auto;\n  }\n\n  /**\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n  [type=\"search\"] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n  }\n\n  /**\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  /**\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to 'inherit' in Safari.\n*/\n\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n  }\n\n  /*\nInteractive\n===========\n*/\n\n  /*\nAdd the correct display in Chrome and Safari.\n*/\n\n  summary {\n    display: list-item;\n  }\n`;\n","import styled from \"@emotion/styled/macro\";\nimport { Theme } from \"../helpers\";\n\nexport const Container = styled.div<{\n  height?: number;\n  width?: number;\n}>`\n  padding: 5px;\n  height: ${({ height }) => (height ? `${height}px` : \"100%\")};\n  width: ${({ width }) => (width ? `${width}px` : \"100%\")};\n`;\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  border-radius: 6px;\n  overflow: hidden;\n`;\n\nexport const ScrollBox = styled.div<{ theme?: Theme }>`\n  height: 100%;\n  width: 100%;\n  position: relative;\n  overflow: auto;\n  scroll-behavior: smooth;\n  background: ${({ theme }) => theme.primary[900]};\n\n  ::-webkit-scrollbar {\n    width: 10px;\n    height: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.scrollbar.thumb.bg};\n    border: 10px none ${({ theme }) => theme.white};\n    border-radius: 20px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background: ${({ theme }) => theme.white};\n  }\n\n  ::-webkit-scrollbar-track {\n    background: ${({ theme }) => theme.primary[900]};\n    border: 22px none ${({ theme }) => theme.white};\n    border-radius: 0px;\n  }\n\n  ::-webkit-scrollbar-corner {\n    background: ${({ theme }) => theme.primary[900]};\n  }\n`;\n\nexport const Box = styled.div<{\n  width: number;\n  height: number;\n  left?: number;\n  top?: number;\n  theme?: Theme;\n}>`\n  position: absolute;\n  height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n  top: ${({ top = 0 }) => top}px;\n  left: ${({ left = 0 }) => left}px;\n  background: ${({ theme }) => theme.primary[900]};\n  z-index: 900;\n`;\n\nexport const Content = styled.div<{\n  width: number;\n  height: number;\n  sidebarWidth: number;\n  isSidebar: boolean;\n  theme?: Theme;\n}>`\n  background: ${({ theme }) => theme.primary[900]};\n  height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n  position: relative;\n  left: ${({ isSidebar, sidebarWidth }) => (isSidebar ? sidebarWidth : 0)}px;\n`;\n","import styled from \"@emotion/styled/macro\";\nimport { Theme } from \"../helpers\";\n\nexport const Box = styled.div<{\n  width: number;\n  isTimeline: boolean;\n  bottom: number;\n  theme?: Theme;\n}>`\n  position: sticky;\n  width: ${({ width }) => width}px;\n  float: left;\n  bottom: ${({ bottom }) => bottom}px;\n  left: 0;\n  z-index: 100;\n  background-color: ${({ theme }) => theme.primary[900]};\n`;\n","import styled from \"@emotion/styled/macro\";\nimport { Theme } from \"../helpers\";\n\nexport const ChannelBox = styled.div<{\n  top: number;\n  height: number;\n  theme?: Theme;\n}>`\n  position: absolute;\n  top: ${({ top }) => top}px;\n  height: ${({ height }) => height}px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.primary[900]};\n`;\n\nexport const ChannelLogo = styled.img`\n  max-height: 60px;\n  max-width: 60px;\n  position: relative;\n`;\n","import styled from \"@emotion/styled/macro\";\nimport { Theme } from \"../helpers\";\n\nexport const ProgramBox = styled.div<{ width: number }>`\n  position: absolute;\n  padding: ${({ width }) => (width === 0 ? 0 : 4)}px;\n  overflow: hidden;\n`;\n\nexport const ProgramContent = styled.div<{\n  isLive: boolean;\n  width: number;\n  theme?: Theme;\n}>`\n  position: relative;\n  display: flex;\n  font-size: 11px;\n  height: 100%;\n  border-radius: 8px;\n  padding: 10px ${({ width }) => (width < 30 ? 4 : 20)}px;\n  overflow: hidden;\n  cursor: pointer;\n  transition: all 0.4s ease-in-out;\n  z-index: 1;\n  background: ${({ theme: { primary } }) =>\n    `linear-gradient(to right, ${primary[600]}, ${primary[600]})`};\n  &:hover {\n    background: ${({ theme: { gradient } }) =>\n      `linear-gradient(to right, ${gradient.blue[900]}, ${gradient.blue[600]})`};\n  }\n\n  ${({ isLive, theme: { gradient } }) =>\n    isLive &&\n    `background: linear-gradient(to right, ${gradient.blue[900]}, ${gradient.blue[600]},${gradient.blue[300]})`}\n`;\n\nexport const ProgramFlex = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n`;\n\nconst Elipsis = `\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const ProgramTitle = styled.p<{ theme?: Theme }>`\n  font-size: 14px;\n  font-weight: 400;\n  text-align: left;\n  margin-top: 0;\n  margin-bottom: 5px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.grey[300]};\n  ${Elipsis}\n`;\n\nexport const ProgramText = styled.span<{ theme?: Theme }>`\n  display: block;\n  font-size: 12.5px;\n  font-weight: 400;\n  color: ${({ theme }) => theme.text.grey[500]};\n  text-align: left;\n  ${Elipsis}\n`;\n\nexport const ProgramImage = styled.img`\n  margin-right: 15px;\n  border-radius: 6px;\n  width: 100px;\n`;\n\nexport const ProgramStack = styled.div`\n  overflow: hidden;\n`;\n","import { useLayoutEffect, useEffect } from \"react\";\nimport { differenceInHours, startOfDay } from \"date-fns\";\nimport { HOURS_IN_DAY } from \"./variables\";\n\ntype DateTime = string | number | Date;\n\ntype OmitObjectType = { [key: string]: any };\nexport const omit = (obj: OmitObjectType, ...props: string[]) => {\n  const result = { ...obj };\n\n  for (const property of props) {\n    delete result[property];\n  }\n\n  return result;\n};\n\nexport const generateArray = (num: number) => new Array(num).fill(\"\");\n\ntype ProgramOptions = {\n  position: { width: number; height: number; top: number; left: number };\n};\nexport const getProgramOptions = <T extends ProgramOptions>(program: T) => {\n  const { width, height, top, left } = program.position;\n  return {\n    ...program,\n    position: { width, height, top, left },\n  };\n};\n\nexport const useIsomorphicLayoutEffect = () =>\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n\nexport const getHourWidth = (dayWidth: number) => dayWidth / HOURS_IN_DAY;\n\nexport const getDate = (date: DateTime) => new Date(date);\n\nconst abs = (num: number) => Math.abs(num);\ninterface DayWidth {\n  dayWidth: number;\n  startDate: DateTime;\n  endDate: DateTime;\n}\nexport const getDayWidthResources = ({\n  dayWidth,\n  startDate,\n  endDate,\n}: DayWidth) => {\n  const startDateTime = getDate(startDate);\n  const endDateTime = getDate(endDate);\n\n  if (endDateTime < startDateTime) {\n    console.error(\n      `Invalid endDate property. Value of endDate must be greater than startDate. Props: startDateTime: ${startDateTime}, endDateTime: ${endDateTime}`\n    );\n  }\n\n  const offsetStartHoursRange = differenceInHours(\n    startDateTime,\n    startOfDay(startDateTime)\n  );\n\n  const numberOfHoursInDay = differenceInHours(endDateTime, startDateTime);\n  const hourWidth = Math.floor(dayWidth / numberOfHoursInDay);\n  const newDayWidth = hourWidth * numberOfHoursInDay;\n\n  return {\n    hourWidth: abs(hourWidth),\n    dayWidth: abs(newDayWidth),\n    numberOfHoursInDay: abs(numberOfHoursInDay),\n    offsetStartHoursRange: abs(offsetStartHoursRange),\n  };\n};\n","import { format, roundToNearestMinutes, startOfDay, addDays } from \"date-fns\";\n\n// Import types\nimport { DateTime as DateRangeTime } from \"./types\";\n\n// Variables\nimport { TIME_FORMAT } from \"./variables\";\n\ntype DateTime = number | string | Date;\n\nconst getTime = (date: DateTime) => new Date(date).getTime();\n\nexport const getLiveStatus = (since: DateTime, till: DateTime) => {\n  const nowTime = getTime(new Date());\n  const sinceTime = getTime(since);\n  const sinceTill = getTime(till);\n  return nowTime >= sinceTime && sinceTill > nowTime;\n};\n\nexport const formatTime = (date: DateTime) =>\n  format(new Date(date), TIME_FORMAT.DEFAULT).replace(/\\s/g, \"T\");\n\nexport const roundToMinutes = (date: DateTime) =>\n  roundToNearestMinutes(new Date(date));\n\nexport const isYesterday = (since: DateTime, startDate: DateTime) => {\n  const sinceTime = getTime(new Date(since));\n  const startDateTime = getTime(new Date(startDate));\n\n  return startDateTime > sinceTime;\n};\n\nexport const isFutureTime = (date: DateTime) => {\n  const dateTime = getTime(new Date(date));\n  const now = getTime(new Date());\n  return dateTime > now;\n};\n\nexport const getTimeRangeDates = (\n  startDate: DateRangeTime,\n  endDate: DateRangeTime\n) => {\n  let endDateValue = endDate;\n  if (endDate === \"\") {\n    endDateValue = formatTime(startOfDay(addDays(new Date(startDate), 1)));\n  }\n\n  return { startDate, endDate: endDateValue };\n};\n","// Dimensions\nexport const DAY_WIDTH = 7200;\nexport const HOURS_IN_DAY = 24;\n\nexport const HOUR_IN_MINUTES = 60;\n\nexport const TIMELINE_HEIGHT = 60;\n\nexport const SIDEBAR_WIDTH = 100;\nexport const ITEM_HEIGHT = 80;\n\nexport const ITEM_OVERSCAN = ITEM_HEIGHT;\n\n// Debounce\nexport const DEBOUNCE_WAIT = 100;\nexport const DEBOUNCE_WAIT_MAX = 100;\n\n// Program refresh\nexport const PROGRAM_REFRESH = 120000;\n\n// Theme\nexport const THEME_MODE = {\n  DARK: \"dark\",\n  LIGHT: \"light\",\n};\n\nexport const TIME_FORMAT = {\n  DEFAULT: \"yyyy-MM-dd HH:mm:ss\",\n  DATE: \"yyyy-MM-dd\",\n  HOURS_MIN: \"HH:mm\",\n  BASE_HOURS_TIME: \"h:mm a\",\n};\n","import { differenceInMinutes, getTime } from \"date-fns\";\n\n// Import interfaces\nimport { Channel, Program } from \"./interfaces\";\n\n// Import types\nimport { ProgramWithPosition, Position, DateTime } from \"./types\";\n\n// Import variables\nimport { HOUR_IN_MINUTES } from \"./variables\";\n\n// Import time heleprs\nimport {\n  formatTime,\n  roundToMinutes,\n  isYesterday as isYesterdayTime,\n} from \"./time\";\nimport { getDate } from \"./common\";\n\n// -------- Program width --------\nconst getItemDiffWidth = (diff: number, hourWidth: number) =>\n  (diff * hourWidth) / HOUR_IN_MINUTES;\n\nexport const getPositionX = (\n  since: DateTime,\n  till: DateTime,\n  startDate: DateTime,\n  endDate: DateTime,\n  hourWidth: number\n) => {\n  const isTomorrow = getTime(getDate(till)) > getTime(getDate(endDate));\n  const isYesterday = getTime(getDate(since)) < getTime(getDate(startDate));\n\n  // When time range is set to 1 hour and program time is greater than 1 hour\n  if (isYesterday && isTomorrow) {\n    const diffTime = differenceInMinutes(\n      roundToMinutes(getDate(endDate)),\n      getDate(startDate)\n    );\n    return getItemDiffWidth(diffTime, hourWidth);\n  }\n\n  if (isYesterday) {\n    const diffTime = differenceInMinutes(\n      roundToMinutes(getDate(till)),\n      getDate(startDate)\n    );\n    return getItemDiffWidth(diffTime, hourWidth);\n  }\n\n  if (isTomorrow) {\n    const diffTime = differenceInMinutes(\n      getDate(endDate),\n      roundToMinutes(getDate(since))\n    );\n\n    if (diffTime < 0) return 0;\n    return getItemDiffWidth(diffTime, hourWidth);\n  }\n\n  const diffTime = differenceInMinutes(\n    roundToMinutes(getDate(till)),\n    roundToMinutes(getDate(since))\n  );\n\n  return getItemDiffWidth(diffTime, hourWidth);\n};\n\n// -------- Channel position in the Epg --------\nexport const getChannelPosition = (\n  channelIndex: number,\n  itemHeight: number\n) => {\n  const top = itemHeight * channelIndex;\n  const position = {\n    top,\n    height: itemHeight,\n  };\n  return position;\n};\n// -------- Program position in the Epg --------\nexport const getProgramPosition = (\n  program: Program,\n  channelIndex: number,\n  itemHeight: number,\n  hourWidth: number,\n  startDate: DateTime,\n  endDate: DateTime\n) => {\n  const item = {\n    ...program,\n    since: formatTime(program.since),\n    till: formatTime(program.till),\n  };\n  const isYesterday = isYesterdayTime(item.since, startDate);\n\n  let width = getPositionX(\n    item.since,\n    item.till,\n    startDate,\n    endDate,\n    hourWidth\n  );\n  const top = itemHeight * channelIndex;\n  let left = getPositionX(startDate, item.since, startDate, endDate, hourWidth);\n  const edgeEnd = getPositionX(\n    startDate,\n    item.till,\n    startDate,\n    endDate,\n    hourWidth\n  );\n\n  if (isYesterday) left = 0;\n  // If item has negative top position, it means that it is not visible in this day\n  if (top < 0) width = 0;\n\n  const position = {\n    width,\n    height: itemHeight,\n    top,\n    left,\n    edgeEnd,\n  };\n  return { position, data: item };\n};\n\n// -------- Converted programs with position data --------\ninterface ConvertedPrograms {\n  data: Program[];\n  channels: Channel[];\n  startDate: DateTime;\n  endDate: DateTime;\n  itemHeight: number;\n  hourWidth: number;\n}\nexport const getConvertedPrograms = ({\n  data,\n  channels,\n  startDate,\n  endDate,\n  itemHeight,\n  hourWidth,\n}: ConvertedPrograms) =>\n  data.map((next) => {\n    const channelIndex = channels.findIndex(\n      ({ uuid }) => uuid === next.channelUuid\n    );\n    return getProgramPosition(\n      next,\n      channelIndex,\n      itemHeight,\n      hourWidth,\n      startDate,\n      endDate\n    );\n  }, [] as ProgramWithPosition[]);\n\n// -------- Converted channels with position data --------\nexport const getConvertedChannels = (channels: Channel[], itemHeight: number) =>\n  channels.map((channel, index) => ({\n    ...channel,\n    position: getChannelPosition(index, itemHeight),\n  }));\n\n// -------- Dynamic virtual program visibility in the EPG --------\nexport const getItemVisibility = (\n  position: Position,\n  scrollY: number,\n  scrollX: number,\n  containerHeight: number,\n  containerWidth: number,\n  itemOverscan: number\n) => {\n  if (position.width <= 0) {\n    return false;\n  }\n\n  if (scrollY > position.top + itemOverscan * 3) {\n    return false;\n  }\n\n  if (scrollY + containerHeight <= position.top) {\n    return false;\n  }\n\n  if (\n    scrollX + containerWidth >= position.left &&\n    scrollX <= position.edgeEnd\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const getSidebarItemVisibility = (\n  position: Pick<Position, \"top\">,\n  scrollY: number,\n  containerHeight: number,\n  itemOverscan: number\n) => {\n  if (scrollY > position.top + itemOverscan * 3) {\n    return false;\n  }\n\n  if (scrollY + containerHeight <= position.top) {\n    return false;\n  }\n\n  return true;\n};\n","import styled from \"@emotion/styled/macro\";\nimport { Theme } from \"../helpers\";\n\n// Import heleprs\nimport { ITEM_HEIGHT } from \"../helpers\";\n\nexport const TimelineTime = styled.span<{ theme?: Theme }>`\n  color: ${({ theme }) => theme.text.grey[300]};\n  position: absolute;\n  top: 18px;\n  left: -18px;\n`;\n\nexport const TimelineDividers = styled.div`\n  height: 100%;\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  align-items: end;\n  padding-bottom: 6px;\n`;\n\nexport const TimelineDivider = styled.div<{ width: number; theme?: Theme }>`\n  background: ${({ theme }) => theme.timeline.divider.bg};\n  height: 10px;\n  width: 1px;\n  margin-right: ${({ width }) => width / 4}px;\n`;\n\nexport const TimelineWrapper = styled.div<{\n  isSidebar: boolean;\n  dayWidth: number;\n  sidebarWidth: number;\n  theme?: Theme;\n}>`\n  position: sticky;\n  top: 0;\n  left: ${({ isSidebar, sidebarWidth }) => (isSidebar ? sidebarWidth : 0)}px;\n  z-index: 100;\n  display: flex;\n  height: ${ITEM_HEIGHT - 20}px;\n  width: ${({ dayWidth }) => dayWidth}px;\n  background: ${({ theme }) => theme.primary[900]};\n`;\n\nexport const TimelineBox = styled.div<{ width: number }>`\n  width: ${({ width }) => width}px;\n  font-size: 14px;\n  position: relative;\n\n  &:first-of-type {\n    ${TimelineTime} {\n      left: 0px;\n    }\n  }\n`;\n","import styled from \"@emotion/styled/macro\";\nimport { Theme } from \"../helpers\";\n\nexport const Box = styled.div<{ height: number; left: number; theme?: Theme }>`\n  position: absolute;\n  top: 64px;\n  left: ${({ left }) => left}px;\n  height: ${({ height }) => height}px;\n  width: 3px;\n  background: ${({ theme }) => theme.green[300]};\n  pointer-events: none;\n  z-index: 100;\n`;\n","import styled from \"@emotion/styled/macro\";\nimport { keyframes } from \"@emotion/react\";\nimport { Theme } from \"../helpers\";\n\nconst time = [0, 50, 0];\n\nconst moveLeft = (animate: { right: string[] }) => keyframes`\n${time.map(\n  (item, index) => `${item}% {\n  transform: translateX(-${animate.right[index]});\n}`\n)}\n`;\n\nexport const Box = styled.div<{ theme?: Theme }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  background: ${({ theme }) => theme.loader.bg};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n\nexport const Shape = styled.div<{\n  width: number;\n  color: string;\n  marginRight?: number;\n  transition: { duration: number; ease?: string; delay?: number };\n  animate: { right: string[] };\n  theme?: Theme;\n}>`\n  width: ${({ width }) => width * 0.42}px;\n  background: ${({ color }) => color};\n  height: 18px;\n  border-radius: 45px;\n  margin-right: ${({ marginRight }) => marginRight ?? 0}px;\n  animation-name: ${({ animate }) => moveLeft(animate)};\n  animation-duration: ${({ transition }) => transition.duration}s;\n  animation-timing-function: ${({ transition }) =>\n    transition.ease ?? \"ease-in-out\"};\n  animation-delay: ${({ transition }) => transition.delay ?? 0}s;\n  animation-iteration-count: infinite;\n`;\n","import React from \"react\";\n\n// Import types\nimport {\n  ProgramItem,\n  ProgramWithPosition,\n  ChannelWithPosiiton,\n  DateTime,\n  Position,\n  BaseTimeFormat,\n} from \"../helpers/types\";\n\n// Import helpers\nimport { getProgramOptions, isFutureTime } from \"../helpers\";\n\n// Import styles\nimport { EpgStyled } from \"../styles\";\n\n// Import components\nimport { Timeline, Channels, Program, Line } from \"../components\";\n\ninterface RenderTimeline {\n  sidebarWidth: number;\n  hourWidth: number;\n  numberOfHoursInDay: number;\n  offsetStartHoursRange: number;\n  isBaseTimeFormat: BaseTimeFormat;\n  isSidebar: boolean;\n  dayWidth: number;\n}\n\ninterface LayoutProps {\n  programs: ProgramItem[];\n  channels: ChannelWithPosiiton[];\n  startDate: DateTime;\n  endDate: DateTime;\n  scrollY: number;\n  dayWidth: number;\n  hourWidth: number;\n  numberOfHoursInDay: number;\n  offsetStartHoursRange: number;\n  sidebarWidth: number;\n  itemHeight: number;\n  onScroll: (\n    e: React.UIEvent<HTMLDivElement, UIEvent> & { target: Element }\n  ) => void;\n  isBaseTimeFormat?: BaseTimeFormat;\n  isSidebar?: boolean;\n  isTimeline?: boolean;\n  isLine?: boolean;\n  isProgramVisible: (position: Position) => boolean;\n  isChannelVisible: (position: Pick<Position, \"top\">) => boolean;\n  renderProgram?: (v: {\n    program: ProgramItem;\n    isBaseTimeFormat: BaseTimeFormat;\n  }) => React.ReactNode;\n  renderChannel?: (v: { channel: ChannelWithPosiiton }) => React.ReactNode;\n  renderTimeline?: (v: RenderTimeline) => React.ReactNode;\n}\n\nconst { ScrollBox, Content } = EpgStyled;\n\nexport const Layout = React.forwardRef<HTMLDivElement, LayoutProps>(\n  (props, scrollBoxRef) => {\n    const { channels, programs, startDate, endDate, scrollY } = props;\n    const { dayWidth, hourWidth, sidebarWidth, itemHeight } = props;\n    const { numberOfHoursInDay, offsetStartHoursRange } = props;\n    const {\n      isSidebar = true,\n      isTimeline = true,\n      isLine = true,\n      isBaseTimeFormat = false,\n    } = props;\n\n    const {\n      onScroll,\n      isProgramVisible,\n      isChannelVisible,\n      renderProgram,\n      renderChannel,\n      renderTimeline,\n    } = props;\n\n    const channelsLength = channels.length;\n    const contentHeight = React.useMemo(() => channelsLength * itemHeight, [\n      channelsLength,\n      itemHeight,\n    ]);\n    const isFuture = isFutureTime(endDate);\n\n    const renderPrograms = (program: ProgramWithPosition) => {\n      const { position } = program;\n      const isVisible = isProgramVisible(position);\n\n      if (isVisible) {\n        const options = getProgramOptions(program);\n        if (renderProgram)\n          return renderProgram({\n            program: options,\n            isBaseTimeFormat,\n          });\n        return (\n          <Program\n            key={program.data.id}\n            isBaseTimeFormat={isBaseTimeFormat}\n            program={options}\n          />\n        );\n      }\n      return null;\n    };\n\n    const renderTopbar = () => {\n      const props = {\n        dayWidth,\n        sidebarWidth: sidebarWidth,\n        isSidebar: isSidebar,\n        numberOfHoursInDay,\n      };\n      const timeProps = {\n        offsetStartHoursRange,\n        numberOfHoursInDay,\n        isBaseTimeFormat,\n        hourWidth,\n      };\n      if (renderTimeline) {\n        return renderTimeline({ ...timeProps, ...props });\n      }\n      return <Timeline {...timeProps} {...props} />;\n    };\n\n    return (\n      <ScrollBox ref={scrollBoxRef} onScroll={onScroll}>\n        {isLine && isFuture && (\n          <Line\n            dayWidth={dayWidth}\n            hourWidth={hourWidth}\n            sidebarWidth={sidebarWidth}\n            startDate={startDate}\n            endDate={endDate}\n            height={contentHeight}\n          />\n        )}\n        {isTimeline && renderTopbar()}\n        {isSidebar && (\n          <Channels\n            sidebarWidth={sidebarWidth}\n            isTimeline={isTimeline}\n            isChannelVisible={isChannelVisible}\n            channels={channels as ChannelWithPosiiton[]}\n            scrollY={scrollY}\n            renderChannel={renderChannel}\n          />\n        )}\n        <Content\n          data-testid=\"content\"\n          sidebarWidth={sidebarWidth}\n          isSidebar={isSidebar}\n          width={dayWidth}\n          height={contentHeight}\n        >\n          {programs.map((program) =>\n            renderPrograms(program as ProgramWithPosition)\n          )}\n        </Content>\n      </ScrollBox>\n    );\n  }\n);\n","export const theme = {\n  primary: {\n    600: \"#1a202c\",\n    900: \"#171923\",\n  },\n  grey: { 300: \"#d1d1d1\" },\n  white: \"#fff\",\n  green: {\n    300: \"#2C7A7B\",\n  },\n  loader: {\n    teal: \"#5DDADB\",\n    purple: \"#3437A2\",\n    pink: \"#F78EB6\",\n    bg: \"#171923db\",\n  },\n  scrollbar: {\n    border: \"#ffffff\",\n    thumb: {\n      bg: \"#e1e1e1\",\n    },\n  },\n\n  gradient: {\n    blue: {\n      300: \"#002eb3\",\n      600: \"#002360\",\n      900: \"#051937\",\n    },\n  },\n\n  text: {\n    grey: {\n      300: \"#a0aec0\",\n      500: \"#718096\",\n    },\n  },\n\n  timeline: {\n    divider: {\n      bg: \"#718096\",\n    },\n  },\n};\n","import React from \"react\";\nimport { startOfToday } from \"date-fns\";\n\n// Import interfaces\nimport { Channel, Program, Theme } from \"../helpers/interfaces\";\n\n// Import types\nimport { DateTime, BaseTimeFormat, Position } from \"../helpers/types\";\n\n// Import helpers\nimport {\n  DAY_WIDTH,\n  ITEM_HEIGHT,\n  ITEM_OVERSCAN,\n  getDayWidthResources,\n  getTimeRangeDates,\n} from \"../helpers\";\n\n// Import theme\nimport { theme as defaultTheme } from \"../theme\";\n\n// Import heleprs\nimport {\n  SIDEBAR_WIDTH,\n  formatTime,\n  getConvertedChannels,\n  getConvertedPrograms,\n  getItemVisibility,\n  getSidebarItemVisibility,\n} from \"../helpers\";\n\n// Import components\nimport { useLayout } from \"./useLayout\";\n\ninterface useEpgProps {\n  channels: Channel[];\n  epg: Program[];\n  width?: number;\n  height?: number;\n  startDate?: DateTime;\n  endDate?: DateTime;\n  isBaseTimeFormat?: BaseTimeFormat;\n  isSidebar?: boolean;\n  isTimeline?: boolean;\n  isLine?: boolean;\n  theme?: Theme;\n  dayWidth?: number;\n  sidebarWidth?: number;\n  itemHeight?: number;\n  itemOverscan?: number;\n}\n\nconst defaultStartDateTime = formatTime(startOfToday());\n\nexport function useEpg({\n  channels: channelsEpg,\n  epg,\n  startDate: startDateInput = defaultStartDateTime,\n  endDate: endDateInput = \"\",\n  isBaseTimeFormat = false,\n  isSidebar = true,\n  isTimeline = true,\n  isLine = true,\n  theme: customTheme,\n  dayWidth: customDayWidth = DAY_WIDTH,\n  sidebarWidth = SIDEBAR_WIDTH,\n  itemHeight = ITEM_HEIGHT,\n  itemOverscan = ITEM_OVERSCAN,\n  width,\n  height,\n}: useEpgProps) {\n  // Get converted start and end dates\n  const { startDate, endDate } = getTimeRangeDates(\n    startDateInput,\n    endDateInput\n  );\n\n  // Get day and hour width of the day\n  const { hourWidth, dayWidth, ...dayWidthResourcesProps } = React.useMemo(\n    () =>\n      getDayWidthResources({ dayWidth: customDayWidth, startDate, endDate }),\n    [customDayWidth, startDate, endDate]\n  );\n\n  // -------- Effects --------\n  const { containerRef, scrollBoxRef, ...layoutProps } = useLayout({\n    startDate,\n    endDate,\n    sidebarWidth,\n    width,\n    height,\n    hourWidth,\n  });\n\n  const { scrollX, scrollY, layoutWidth, layoutHeight } = layoutProps;\n  const { onScroll, onScrollToNow, onScrollTop, onScrollLeft, onScrollRight } =\n    layoutProps;\n\n  //-------- Variables --------\n  const channels = React.useMemo(\n    () => getConvertedChannels(channelsEpg, itemHeight),\n    [channelsEpg, itemHeight]\n  );\n\n  const startDateTime = formatTime(startDate);\n  const endDateTime = formatTime(endDate);\n  const programs = React.useMemo(\n    () =>\n      getConvertedPrograms({\n        data: epg,\n        channels,\n        startDate: startDateTime,\n        endDate: endDateTime,\n        itemHeight,\n        hourWidth,\n      }),\n    [epg, channels, startDateTime, endDateTime, itemHeight, hourWidth]\n  );\n\n  const theme: Theme = customTheme || defaultTheme;\n\n  // -------- Handlers --------\n  const isProgramVisible = React.useCallback(\n    (position: Position) =>\n      getItemVisibility(\n        position,\n        scrollY,\n        scrollX,\n        layoutHeight,\n        layoutWidth,\n        itemOverscan\n      ),\n    [scrollY, scrollX, layoutHeight, layoutWidth, itemOverscan]\n  );\n\n  const isChannelVisible = React.useCallback(\n    (position: Pick<Position, \"top\">) =>\n      getSidebarItemVisibility(position, scrollY, layoutHeight, itemOverscan),\n    [scrollY, layoutHeight, itemOverscan]\n  );\n\n  const getEpgProps = () => ({\n    width,\n    height,\n    isSidebar,\n    isLine,\n    isTimeline,\n    sidebarWidth,\n    ref: containerRef,\n    theme,\n  });\n\n  const getLayoutProps = () => ({\n    programs,\n    channels,\n    startDate,\n    endDate,\n    scrollY,\n    onScroll,\n    isBaseTimeFormat,\n    isSidebar,\n    isTimeline,\n    isLine,\n    isProgramVisible,\n    isChannelVisible,\n    dayWidth,\n    hourWidth,\n    sidebarWidth,\n    itemHeight,\n    ...dayWidthResourcesProps,\n    ref: scrollBoxRef,\n  });\n\n  return {\n    getEpgProps,\n    getLayoutProps,\n    onScrollToNow,\n    onScrollTop,\n    onScrollLeft,\n    onScrollRight,\n    scrollY,\n    scrollX,\n  };\n}\n","import React from \"react\";\n\n// Import heleprs\nimport { useIsomorphicLayoutEffect } from \"../helpers\";\n\nexport function useInterval(callback: () => void, delay: number | null) {\n  const useIsomorphicEffect = useIsomorphicLayoutEffect();\n  const savedCallback = React.useRef(callback);\n\n  useIsomorphicEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  React.useEffect(() => {\n    if (!delay && delay !== 0) {\n      return;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n\n    return () => clearInterval(id);\n  }, [delay]);\n}\n","import React from \"react\";\nimport { format } from \"date-fns\";\n\n// Import types\nimport { ProgramItem, BaseTimeFormat } from \"../helpers/types\";\n\n// Import helpers\nimport { PROGRAM_REFRESH, TIME_FORMAT, getLiveStatus, omit } from \"../helpers\";\n\n// Import hooks\nimport { useInterval } from \"./useInterval\";\n\ninterface useProgramProps<T> {\n  program: T;\n  isBaseTimeFormat: BaseTimeFormat;\n  minWidth?: number;\n}\n\nexport function useProgram<T extends ProgramItem>({\n  program,\n  isBaseTimeFormat,\n  minWidth = 200,\n}: useProgramProps<T>) {\n  const { data, position } = program;\n  const { width } = position;\n\n  const { since, till } = data;\n  const [isLive, setIsLive] = React.useState<boolean>(() =>\n    getLiveStatus(since, till)\n  );\n\n  const newPosition = omit(position, \"egdeEnd\");\n\n  const formatTime = (\n    date: string | number | Date,\n    formatType: string = TIME_FORMAT.HOURS_MIN\n  ) => format(new Date(date), formatType).replace(/\\s/g, \"\");\n\n  const set12HoursTimeFormat = () => {\n    if (isBaseTimeFormat) return TIME_FORMAT.BASE_HOURS_TIME;\n    return TIME_FORMAT.HOURS_MIN;\n  };\n\n  useInterval(() => {\n    const status = getLiveStatus(since, till);\n    setIsLive(status);\n  }, PROGRAM_REFRESH);\n\n  const isMinWidth = width > minWidth;\n\n  return {\n    formatTime,\n    set12HoursTimeFormat,\n    isLive,\n    isMinWidth,\n    styles: { width, position: newPosition },\n  };\n}\n","import { format } from \"date-fns\";\n\n// Import types\nimport { BaseTimeFormat } from \"../helpers/types\";\n\n// Import helpers\nimport { TIME_FORMAT, generateArray } from \"../helpers\";\n\nexport function useTimeline(\n  numberOfHoursInDay: number,\n  isBaseTimeFormat: BaseTimeFormat\n) {\n  const time = generateArray(numberOfHoursInDay);\n  const dividers = generateArray(4);\n\n  const formatTime = (index: number) => {\n    const date = new Date();\n    const baseDate = format(date, TIME_FORMAT.DATE);\n    const time = index < 10 ? `0${index}` : index;\n\n    if (isBaseTimeFormat) {\n      const date = new Date(`${baseDate}T${time}:00:00`);\n      const timeFormat = format(date, TIME_FORMAT.BASE_HOURS_TIME);\n      return timeFormat.toLowerCase().replace(/\\s/g, \"\");\n    }\n\n    return `${time}:00`;\n  };\n\n  return { time, dividers, formatTime };\n}\n","import * as React from \"react\";\n\n// Import interfaces\nimport { Program as ProgramType } from \"../helpers/interfaces\";\nimport { BaseTimeFormat } from \"../helpers/types\";\n\n// Import types\nimport { ProgramItem } from \"../helpers/types\";\n\n// Import styles\nimport { ProgramStyled } from \"../styles\";\n\n// Import hooks\nimport { useProgram } from \"../hooks\";\n\ninterface ProgramProps<T> {\n  program: T;\n  isBaseTimeFormat: BaseTimeFormat;\n  onClick?: (v: ProgramType) => void;\n}\n\nconst {\n  ProgramBox,\n  ProgramContent,\n  ProgramFlex,\n  ProgramStack,\n  ProgramTitle,\n  ProgramText,\n  ProgramImage,\n} = ProgramStyled;\n\nexport function Program<T extends ProgramItem>({\n  program,\n  isBaseTimeFormat,\n  onClick,\n  ...rest\n}: ProgramProps<T>) {\n  const {\n    styles,\n    formatTime,\n    set12HoursTimeFormat,\n    isLive,\n    isMinWidth,\n  } = useProgram({\n    program,\n    isBaseTimeFormat,\n  });\n\n  const { data } = program;\n  const { image, title, since, till } = data;\n\n  const handleOnContentClick = () => onClick?.(data);\n\n  return (\n    <ProgramBox\n      data-testid=\"program-item\"\n      width={styles.width}\n      style={styles.position}\n    >\n      <ProgramContent\n        data-testid=\"program-content\"\n        width={styles.width}\n        isLive={isLive}\n        onClick={handleOnContentClick}\n        {...rest}\n      >\n        <ProgramFlex>\n          {isLive && isMinWidth && <ProgramImage src={image} alt=\"Preview\" />}\n          <ProgramStack>\n            <ProgramTitle>{title}</ProgramTitle>\n            <ProgramText aria-label=\"program time\">\n              {formatTime(since, set12HoursTimeFormat())} -{\" \"}\n              {formatTime(till, set12HoursTimeFormat())}\n            </ProgramText>\n          </ProgramStack>\n        </ProgramFlex>\n      </ProgramContent>\n    </ProgramBox>\n  );\n}\n","import * as React from 'react';\n// Import interfaces\nimport { ChannelWithPosiiton } from '../helpers/types';\n\n// Import styles\nimport { ChannelsStyled } from '../styles';\n\n// Import Components\nimport { Channel } from '../components';\n\ninterface ChannelsProps {\n  channels: ChannelWithPosiiton[];\n  scrollY: number;\n  sidebarWidth: number;\n  isTimeline: boolean;\n  isChannelVisible: (position: any) => boolean;\n  renderChannel?: (v: { channel: ChannelWithPosiiton }) => React.ReactNode;\n}\n\nconst { Box } = ChannelsStyled;\n\nexport function Channels(props: ChannelsProps) {\n  const { channels, scrollY, sidebarWidth, renderChannel } = props;\n  const { isTimeline, isChannelVisible } = props;\n\n  const renderChannels = (channel: ChannelWithPosiiton) => {\n    const isVisible = isChannelVisible(channel.position);\n    if (isVisible) {\n      if (renderChannel) return renderChannel({ channel });\n      return <Channel key={channel.uuid} channel={channel} />;\n    }\n    return null;\n  };\n\n  return (\n    <Box\n      data-testid=\"sidebar\"\n      width={sidebarWidth}\n      isTimeline={isTimeline}\n      bottom={scrollY}\n    >\n      {channels.map(renderChannels)}\n    </Box>\n  );\n}\n","import * as React from \"react\";\n\n// Import interfaces\nimport { ChannelWithPosiiton } from \"../helpers/types\";\n\n// Import styles\nimport { ChannelStyled } from \"../styles\";\n\ninterface ChannelProps<T> {\n  channel: T;\n  onClick?: (v: ChannelWithPosiiton) => void;\n}\n\nconst { ChannelBox, ChannelLogo } = ChannelStyled;\n\nexport function Channel<T extends ChannelWithPosiiton>({\n  channel,\n  onClick,\n  ...rest\n}: ChannelProps<T>) {\n  const { position, logo } = channel;\n  return (\n    <ChannelBox\n      data-testid=\"sidebar-item\"\n      onClick={() => onClick?.(channel)}\n      {...position}\n      {...rest}\n    >\n      <ChannelLogo src={logo} alt=\"Logo\" />\n    </ChannelBox>\n  );\n}\n","import * as React from \"react\";\n\n// Import types\nimport { BaseTimeFormat } from \"../helpers/types\";\n\n// Import styles\nimport { TimelineStyled } from \"../styles\";\n\n// Import hooks\nimport { useTimeline } from \"../hooks\";\n\nconst {\n  TimelineWrapper,\n  TimelineBox,\n  TimelineTime,\n  TimelineDividers,\n  TimelineDivider,\n} = TimelineStyled;\n\ninterface TimelineProps {\n  isBaseTimeFormat: BaseTimeFormat;\n  isSidebar: boolean;\n  dayWidth: number;\n  hourWidth: number;\n  numberOfHoursInDay: number;\n  offsetStartHoursRange: number;\n  sidebarWidth: number;\n}\n\nexport function Timeline({\n  isBaseTimeFormat,\n  isSidebar,\n  dayWidth,\n  hourWidth,\n  numberOfHoursInDay,\n  offsetStartHoursRange,\n  sidebarWidth,\n}: TimelineProps) {\n  const { time, dividers, formatTime } = useTimeline(\n    numberOfHoursInDay,\n    isBaseTimeFormat\n  );\n\n  const renderTime = (index: number) => (\n    <TimelineBox data-testid=\"timeline-item\" key={index} width={hourWidth}>\n      <TimelineTime>{formatTime(index + offsetStartHoursRange)}</TimelineTime>\n      <TimelineDividers>{renderDividers()}</TimelineDividers>\n    </TimelineBox>\n  );\n\n  const renderDividers = () =>\n    dividers.map((_, index) => (\n      <TimelineDivider key={index} width={hourWidth} />\n    ));\n\n  return (\n    <TimelineWrapper\n      data-testid=\"timeline\"\n      dayWidth={dayWidth}\n      sidebarWidth={sidebarWidth}\n      isSidebar={isSidebar}\n    >\n      {time.map((_, index) => renderTime(index))}\n    </TimelineWrapper>\n  );\n}\n","import * as React from \"react\";\nimport { isToday } from \"date-fns\";\n\n// Import types\nimport { DateTime } from \"../../helpers/types\";\n\n// Import styles\nimport { LineStyled } from \"../../styles\";\n\n// Import components\nimport { useLine } from \"./useLine\";\n\ninterface LineProps {\n  height: number;\n  startDate: DateTime;\n  endDate: DateTime;\n  dayWidth: number;\n  hourWidth: number;\n  sidebarWidth: number;\n}\n\nconst { Box } = LineStyled;\n\nexport function Line({\n  height,\n  startDate,\n  endDate,\n  dayWidth,\n  hourWidth,\n  sidebarWidth,\n}: LineProps) {\n  const { positionX } = useLine({\n    startDate,\n    endDate,\n    dayWidth,\n    hourWidth,\n    sidebarWidth,\n  });\n\n  const date = new Date(startDate);\n  if (!isToday(date)) return null;\n\n  return <Box height={height} left={positionX} />;\n}\n","import React from \"react\";\nimport { startOfDay } from \"date-fns\";\n\n// Import types\nimport { DateTime } from \"../../helpers/types\";\n\n// Import helpers\nimport { HOUR_IN_MINUTES, PROGRAM_REFRESH, getPositionX } from \"../../helpers\";\n\n// Import hooks\nimport { useInterval } from \"../../hooks\";\n\ninterface useLineProps {\n  startDate: DateTime;\n  endDate: DateTime;\n  dayWidth: number;\n  hourWidth: number;\n  sidebarWidth: number;\n}\n\nexport function useLine({\n  startDate,\n  endDate,\n  dayWidth,\n  hourWidth,\n  sidebarWidth,\n}: useLineProps) {\n  const initialState =\n    getPositionX(\n      startOfDay(new Date(startDate)),\n      new Date(),\n      startDate,\n      endDate,\n      hourWidth\n    ) + sidebarWidth;\n  const [positionX, setPositionX] = React.useState<number>(() => initialState);\n\n  const isDayEnd = positionX <= dayWidth;\n  const isScrollX = React.useMemo(() => (isDayEnd ? PROGRAM_REFRESH : null), [\n    isDayEnd,\n  ]);\n\n  useInterval(() => {\n    const offset = hourWidth / HOUR_IN_MINUTES;\n    const positionOffset = offset * 2;\n    setPositionX((prev) => prev + positionOffset);\n  }, isScrollX);\n\n  React.useEffect(() => {\n    const date = new Date(startDate);\n    const positionX = getPositionX(\n      startOfDay(date),\n      new Date(),\n      startDate,\n      endDate,\n      hourWidth\n    );\n    const newPositionX = positionX + sidebarWidth;\n    setPositionX(newPositionX);\n  }, [startDate, endDate, sidebarWidth, hourWidth]);\n\n  return { positionX };\n}\n","import * as React from \"react\";\nimport { theme } from \"../theme/theme\";\n\n// Import styles\nimport { LoaderStyled } from \"../styles\";\n\nconst { Box, Shape } = LoaderStyled;\n\nconst Element = ({\n  width,\n  color,\n  animate,\n  marginRight,\n  transition,\n}: {\n  width: number;\n  color: string;\n  transition: { duration: number; ease?: string; delay?: number };\n  animate: { right: string[] };\n  marginRight?: number;\n}) => (\n  <Shape\n    className=\"SHAPE\"\n    width={width}\n    color={color}\n    animate={animate}\n    transition={transition}\n    marginRight={marginRight}\n  />\n);\n\nexport function Loader() {\n  return (\n    <Box aria-label=\"loading\">\n      <div>\n        <div\n          style={{ display: \"flex\", justifyContent: \"end\", marginBottom: 16 }}\n        >\n          <Element\n            animate={{\n              right: [\"0px\", \"75px\", \"0px\"],\n            }}\n            transition={{\n              duration: 1,\n            }}\n            width={217}\n            color={theme.loader.teal}\n            marginRight={10}\n          />\n          <Element\n            width={122}\n            color={theme.loader.purple}\n            animate={{\n              right: [\"0px\", \"50px\", \"0px\"],\n            }}\n            transition={{\n              duration: 1,\n              delay: 0.02,\n            }}\n          />\n        </div>\n        <div\n          style={{ display: \"flex\", justifyContent: \"end\", marginBottom: 16 }}\n        >\n          <Element\n            width={267}\n            color={theme.loader.pink}\n            animate={{\n              right: [\"0px\", \"70px\", \"0px\"],\n            }}\n            transition={{\n              delay: 0.5,\n              duration: 1,\n            }}\n          />\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"end\" }}>\n          <Element\n            width={217}\n            color={theme.loader.purple}\n            marginRight={10}\n            animate={{\n              right: [\"0px\", \"95px\", \"0px\"],\n            }}\n            transition={{\n              delay: 0.3,\n              duration: 1,\n            }}\n          />\n          <Element\n            width={80}\n            color={theme.loader.teal}\n            animate={{\n              right: [\"0px\", \"70px\", \"0px\"],\n            }}\n            transition={{\n              duration: 1,\n              delay: 0.33,\n            }}\n          />\n        </div>\n      </div>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { ThemeProvider, Global } from \"@emotion/react\";\n\n// Import interfaces\nimport { Theme } from \"./helpers/interfaces\";\n\n// Import helpers\nimport { TIMELINE_HEIGHT } from \"./helpers\";\n\n// Import styles\nimport { globalStyles, EpgStyled } from \"./styles\";\n\n// Import components\nimport { Loader } from \"./components\";\n\ninterface EpgProps {\n  width?: number;\n  height?: number;\n  isSidebar: boolean;\n  isTimeline?: boolean;\n  isLoading?: boolean;\n  children: React.ReactNode;\n  loader?: React.ReactNode;\n  theme: Theme;\n  sidebarWidth: number;\n}\n\nconst { Container, Wrapper, Box } = EpgStyled;\n\nexport const Epg = React.forwardRef<HTMLDivElement, EpgProps>(\n  (\n    {\n      children,\n      width,\n      height,\n      theme,\n      sidebarWidth,\n      isSidebar = true,\n      isTimeline = true,\n      isLoading = false,\n      loader: LoaderComponent,\n      ...rest\n    },\n    containerRef\n  ) => {\n    const renderLoader = () => LoaderComponent ?? <Loader />;\n    return (\n      <ThemeProvider theme={theme}>\n        <Global styles={globalStyles} />\n        <Container\n          data-testid=\"container\"\n          width={width}\n          height={height}\n          ref={containerRef}\n          {...rest}\n        >\n          <Wrapper>\n            {isSidebar && isTimeline && (\n              <Box\n                width={sidebarWidth}\n                height={TIMELINE_HEIGHT}\n                left={0}\n                top={0}\n              />\n            )}\n            {isLoading && renderLoader()}\n            {children}\n          </Wrapper>\n        </Container>\n      </ThemeProvider>\n    );\n  }\n);\n","import { ProgramStyled, ChannelStyled, TimelineStyled } from \"./styles\";\n\n// Import types\nimport { Theme as ThemeType } from \"./helpers/interfaces\";\nimport {\n  ProgramItem as ProgramItemType,\n  ChannelWithPosiiton,\n  BaseTimeFormat as BaseTimeFormatType,\n} from \"./helpers/types\";\n\n// Types\nexport type Theme = ThemeType;\nexport type Channel = ChannelWithPosiiton;\nexport type Program = ProgramItemType;\nexport type ProgramItem = {\n  program: ProgramItemType;\n  isBaseTimeFormat: BaseTimeFormatType;\n};\n\n// Components\nexport { Layout } from \"./components\";\nexport { Epg } from \"./Epg\";\nexport { useEpg, useProgram, useTimeline } from \"./hooks\";\n\n// Styles\nconst { ChannelBox, ChannelLogo } = ChannelStyled;\n\nconst {\n  ProgramBox,\n  ProgramContent,\n  ProgramFlex,\n  ProgramStack,\n  ProgramTitle,\n  ProgramText,\n  ProgramImage,\n} = ProgramStyled;\n\nconst {\n  TimelineWrapper,\n  TimelineBox,\n  TimelineTime,\n  TimelineDivider,\n  TimelineDividers,\n} = TimelineStyled;\n\nexport {\n  // Channel\n  ChannelBox,\n  ChannelLogo,\n  // Program\n  ProgramBox,\n  ProgramContent,\n  ProgramFlex,\n  ProgramStack,\n  ProgramTitle,\n  ProgramText,\n  ProgramImage,\n  // Timeline\n  TimelineWrapper,\n  TimelineBox,\n  TimelineTime,\n  TimelineDividers,\n  TimelineDivider,\n};\n","import React from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { startOfToday, isToday as isTodayFns } from \"date-fns\";\n\n// Import types\nimport { DateTime } from \"../helpers/types\";\n\n// Import heleprs\nimport {\n  DEBOUNCE_WAIT,\n  DEBOUNCE_WAIT_MAX,\n  getPositionX,\n  useIsomorphicLayoutEffect,\n} from \"../helpers\";\n\ninterface useLayoutProps {\n  height?: number;\n  width?: number;\n  hourWidth: number;\n  sidebarWidth: number;\n  startDate: DateTime;\n  endDate: DateTime;\n}\n\nexport function useLayout({\n  height,\n  width,\n  startDate,\n  endDate,\n  hourWidth,\n  sidebarWidth,\n}: useLayoutProps) {\n  const useIsomorphicEffect = useIsomorphicLayoutEffect();\n\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const scrollBoxRef = React.useRef<HTMLDivElement>(null);\n  //-------- State --------\n  const [scrollY, setScrollY] = React.useState<number>(0);\n  const [scrollX, setScrollX] = React.useState<number>(0);\n  const [layoutWidth, setLayoutWidth] = React.useState<number>(width as number);\n  const [layoutHeight, setLayoutHeight] = React.useState<number>(\n    height as number\n  );\n  const isToday = isTodayFns(new Date(startDate));\n\n  // -------- Handlers --------\n  const handleScrollDebounced = useDebouncedCallback(\n    (value) => {\n      setScrollY(value.y);\n      setScrollX(value.x);\n    },\n    DEBOUNCE_WAIT,\n    { maxWait: DEBOUNCE_WAIT_MAX }\n  );\n\n  const handleOnScroll = React.useCallback(\n    (e: React.UIEvent<HTMLDivElement, UIEvent> & { target: Element }) => {\n      handleScrollDebounced({ y: e.target.scrollTop, x: e.target.scrollLeft });\n    },\n    [handleScrollDebounced]\n  );\n\n  const handleOnScrollToNow = React.useCallback(() => {\n    if (scrollBoxRef?.current && isToday) {\n      const clientWidth = (width ??\n        containerRef.current?.clientWidth) as number;\n\n      const newDate = new Date();\n      const scrollPosition = getPositionX(\n        startOfToday(),\n        newDate,\n        startDate,\n        endDate,\n        hourWidth\n      );\n      const scrollNow = scrollPosition - clientWidth / 2 + sidebarWidth;\n      scrollBoxRef.current.scrollLeft = scrollNow;\n    }\n  }, [isToday, startDate, endDate, width, sidebarWidth, hourWidth]);\n\n  const handleOnScrollTop = React.useCallback(\n    (value: number = hourWidth) => {\n      if (scrollBoxRef?.current) {\n        const top = scrollBoxRef.current.scrollTop + value;\n        scrollBoxRef.current.scrollTop = top;\n      }\n    },\n    [hourWidth]\n  );\n\n  const handleOnScrollRight = React.useCallback(\n    (value: number = hourWidth) => {\n      if (scrollBoxRef?.current) {\n        const right = scrollBoxRef.current.scrollLeft + value;\n        scrollBoxRef.current.scrollLeft = right;\n      }\n    },\n    [hourWidth]\n  );\n\n  const handleOnScrollLeft = React.useCallback(\n    (value: number = hourWidth) => {\n      if (scrollBoxRef?.current) {\n        const left = scrollBoxRef.current.scrollLeft - value;\n        scrollBoxRef.current.scrollLeft = left;\n      }\n    },\n    [hourWidth]\n  );\n\n  const handleResizeDebounced = useDebouncedCallback(\n    () => {\n      if (containerRef?.current && !width) {\n        const container = containerRef.current;\n        const { clientWidth } = container;\n        setLayoutWidth(clientWidth);\n      }\n    },\n    DEBOUNCE_WAIT * 4,\n    { maxWait: DEBOUNCE_WAIT_MAX * 4 }\n  );\n\n  // -------- Efffects --------\n  useIsomorphicEffect(() => {\n    if (containerRef?.current) {\n      const container = containerRef.current;\n      if (!width) {\n        const { clientWidth } = container;\n        setLayoutWidth(clientWidth);\n      }\n      if (!height) {\n        const { clientHeight } = container;\n        setLayoutHeight(clientHeight);\n      }\n    }\n\n    if (scrollBoxRef?.current && isToday) {\n      handleOnScrollToNow();\n    }\n  }, [height, width, startDate, isToday, handleOnScrollToNow]);\n\n  useIsomorphicEffect(() => {\n    window.addEventListener(\"resize\", handleResizeDebounced);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResizeDebounced);\n    };\n  }, [width]);\n\n  return {\n    containerRef,\n    scrollBoxRef,\n    scrollX,\n    scrollY,\n    layoutWidth,\n    layoutHeight,\n    onScroll: handleOnScroll,\n    onScrollToNow: handleOnScrollToNow,\n    onScrollTop: handleOnScrollTop,\n    onScrollLeft: handleOnScrollLeft,\n    onScrollRight: handleOnScrollRight,\n  };\n}\n"],"names":["globalStyles","css","Container","target","height","width","Wrapper","name","styles","ScrollBox","theme","primary","scrollbar","thumb","bg","white","Box","top","left","Content","isSidebar","sidebarWidth","bottom","ChannelBox","ChannelLogo","ProgramBox","ProgramContent","gradient","blue","isLive","ProgramFlex","Elipsis","ProgramTitle","grey","ProgramText","text","ProgramImage","ProgramStack","generateArray","num","Array","fill","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","getDate","date","Date","abs","Math","getTime","getLiveStatus","since","till","nowTime","sinceTime","sinceTill","formatTime","format","replace","roundToMinutes","roundToNearestMinutes","getItemDiffWidth","diff","hourWidth","getPositionX","startDate","endDate","isTomorrow","isYesterday","diffTime","differenceInMinutes","getChannelPosition","channelIndex","itemHeight","TimelineTime","TimelineDividers","TimelineDivider","timeline","divider","TimelineWrapper","ITEM_HEIGHT","dayWidth","TimelineBox","green","time","loader","Shape","color","marginRight","animate","keyframes","map","item","index","right","transition","duration","ease","delay","EpgStyled","Layout","React","forwardRef","props","scrollBoxRef","channels","programs","scrollY","numberOfHoursInDay","offsetStartHoursRange","isTimeline","isLine","isBaseTimeFormat","onScroll","isProgramVisible","isChannelVisible","renderProgram","renderChannel","renderTimeline","channelsLength","length","contentHeight","useMemo","isFuture","ref","Line","timeProps","Timeline","renderTopbar","Channels","program","position","options","getProgramOptions","Program","key","data","id","renderPrograms","600","900","300","teal","purple","pink","border","500","defaultStartDateTime","startOfToday","useInterval","callback","useIsomorphicEffect","savedCallback","useRef","current","setInterval","clearInterval","useProgram","minWidth","useState","setIsLive","newPosition","obj","result","property","omit","status","formatType","set12HoursTimeFormat","isMinWidth","useTimeline","dividers","baseDate","toLowerCase","ProgramStyled","onClick","rest","image","title","style","src","alt","ChannelsStyled","channel","Channel","uuid","ChannelStyled","logo","TimelineStyled","_","renderTime","LineStyled","positionX","initialState","startOfDay","setPositionX","isDayEnd","positionOffset","prev","useLine","isToday","LoaderStyled","Element","className","Loader","display","justifyContent","marginBottom","Epg","containerRef","children","isLoading","LoaderComponent","ThemeProvider","Global","channelsEpg","epg","customTheme","customDayWidth","itemOverscan","endDateValue","addDays","getTimeRangeDates","startDateTime","endDateTime","console","error","differenceInHours","floor","newDayWidth","getDayWidthResources","dayWidthResourcesProps","setScrollY","scrollX","setScrollX","layoutWidth","setLayoutWidth","layoutHeight","setLayoutHeight","isTodayFns","handleScrollDebounced","useDebouncedCallback","value","y","x","maxWait","handleOnScroll","useCallback","e","scrollTop","scrollLeft","handleOnScrollToNow","clientWidth","_containerRef$current","newDate","scrollPosition","handleOnScrollTop","handleOnScrollRight","handleOnScrollLeft","handleResizeDebounced","DEBOUNCE_WAIT","DEBOUNCE_WAIT_MAX","container","clientHeight","addEventListener","removeEventListener","onScrollToNow","onScrollTop","onScrollLeft","onScrollRight","useLayout","layoutProps","getConvertedChannels","next","findIndex","channelUuid","isYesterdayTime","edgeEnd","getProgramPosition","getConvertedPrograms","defaultTheme","containerHeight","containerWidth","getItemVisibility","getSidebarItemVisibility","getEpgProps","getLayoutProps"],"mappings":"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"}